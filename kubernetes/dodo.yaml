backdrops:
  kubectl:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    script: |
      test -f /home/dodo/.kube/context.yaml || cp /home/dodo/context.yaml /home/dodo/.kube/context.yaml
      if [ "$1" = "debug" ]; then
        shift
        exec kubectl run -i --rm --tty debug --image=alpine:latest --restart=Never "$@" -- sh
      else
        exec /bin/kubectl "$@"
      fi

  helm:
    forward_stage: true
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - 'helm:/home/dodo/.cache/helm'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    script: exec /bin/helm "$@"

  kustomize:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    script: |
      test -f /home/dodo/.kube/context.yaml || cp /home/dodo/context.yaml /home/dodo/.kube/context.yaml
      exec kustomize "$@"

  k9s:
    container_name: k9s
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    ports:
      - '8080:8080'
    volumes:
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
    script: exec /bin/k9s "$@"

  crictl:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - '/run/containerd/containerd.sock:/run/containerd/containerd.sock'
    script: exec /bin/crictl "$@"

  flux:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    environment:
      - 'KUBECONFIG=/home/dodo/.kubeconfig'
    volumes:
      - 'aws-data:/home/dodo/.aws'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
    script: exec /bin/flux "$@"

  popeye:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'aws-data:/home/dodo/.aws'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
    script: exec /bin/popeye "$@"

  kubescape:
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'aws-data:/home/dodo/.aws'
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
    script: exec /bin/kubescape "$@"

  kind:
    forward_stage: true
    image:
      name: dodo/kube
      requires: [dodo/base, dodo/gpg, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'kubeconfig:/home/dodo/.kube'
    script: exec /bin/kind "$@"
