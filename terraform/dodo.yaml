backdrops:
  terraform11:
    image:
       name: dodo/terraform11
       requires: [dodo/base, dodo/languages/golang, dodo/gpg, dodo/pass, dodo/aws, dodo/kube]
       context: '{{ currentDir }}'
       dockerfile: '{{ currentDir }}/Dockerfile-0.11.yaml'
    volumes:
      - 'kubeconfig:/home/dodo/.kube'
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'terraform:/data/terraform'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    environment:
      - TF_VAR_username=ole.claussen
      - SSH_AUTH_SOCK=/data/gpg-agent/S.gpg-agent.ssh
    script: |
      test -f terraform.log && rm -f terraform.log
      if [ "$1" = "fa" ]; then
        exec terraform init -get=true -upgrade=true
      else
        exec terraform "$@"
      fi

  terraform:
    image:
      name: dodo/terraform
      requires: [dodo/base, dodo/languages/golang, dodo/gpg, dodo/pass, dodo/aws, dodo/kube, dodo/google]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'helm:/home/dodo/.cache/helm'
      - 'gcloud-data:/home/dodo/.config/gcloud'
      - 'terraform:/data/terraform'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '{{ projectRoot }}:/build'
    user: '1000:113'
    working_dir: '/build/{{ projectPath }}'
    interpreter: ['/bin/dormouse']
    script: '{{ readFile `dormouse.yaml` }}'

  terragrunt:
    image:
      name: dodo/terraform
      requires: [dodo/base, dodo/languages/golang, dodo/gpg, dodo/pass, dodo/aws, dodo/kube, dodo/google]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - 'aws-cache:/home/dodo/.aws/cli/cache'
      - 'helm:/home/dodo/.cache/helm'
      - 'gcloud-data:/home/dodo/.config/gcloud'
      - 'terraform:/data/terraform'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '{{ projectRoot }}:/build'
    user: '1000:113'
    working_dir: '/build/{{ projectPath }}'
    interpreter: ['/bin/dormouse']
    script: '{{ readFile `dormouse.yaml` }}'

  tfsec:
    image:
       name: dodo/terraform
       requires: [dodo/base, dodo/languages/golang]
       context: '{{ currentDir }}'
       dockerfile: '{{ currentDir }}/Dockerfile.yaml'
    volumes:
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    script: exec tfsec "$@"
