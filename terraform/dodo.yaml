backdrops:
  terraform:
    image:
       name: dodo/terraform
       requires: [dodo/base, dodo/languages/golang, dodo/gpg, dodo/pass, dodo/aws]
       context: '{{ currentDir }}'
       dockerfile: '{{ currentDir }}/Dockerfile'
    volumes:
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    environment:
      - TF_LOG=DEBUG
      - TF_LOG_PATH=/build/terraform.log
      - TF_VAR_username=ole.claussen.api
    script: |
      test -f terraform.log && rm -f terraform.log
      if [ "$1" = "fa" ]; then
        exec terraform init -get=true -upgrade=true
      else
        exec terraform "$@"
      fi

  terraform12:
    image:
      name: dodo/terraform12
      requires: [dodo/base, dodo/languages/golang, dodo/gpg, dodo/pass, dodo/aws]
      context: '{{ currentDir }}'
      dockerfile: '{{ currentDir }}/Dockerfile'
      args:
        terraform_version: '0.12.20'
    volumes:
      - 'gpg-agent:/data/gpg-agent'
      - 'passwords:/data/passwords'
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    environment:
      - TF_VAR_username=ole.claussen.api
    script: |
      test -f terraform.log && rm -f terraform.log
      if [ "$1" = "fa" ]; then
        exec terraform init -get=true -upgrade=true
      else
        exec terraform "$@"
      fi

  tfsec:
    image:
       name: dodo/terraform
       requires: [dodo/base, dodo/languages/golang]
       context: '{{ currentDir }}'
       dockerfile: '{{ currentDir }}/Dockerfile'
    volumes:
      - '{{ projectRoot }}:/build'
    working_dir: '/build/{{ projectPath }}'
    script: exec tfsec "$@"
